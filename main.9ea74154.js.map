{"version":3,"sources":["scripts/main.js"],"names":["activeRow","prevTarget","table","document","body","querySelector","tHeaders","Array","from","rows","children","tBody","tBodyRows","forEach","header","addEventListener","toSort","row","select","form","createElement","method","action","classList","add","after","insertAdjacentHTML","labels","querySelectorAll","bodyTds","e","target","closest","remove","pushNotification","title","description","type","element","messageTitle","messageDescription","className","dataset","qa","append","style","top","right","innerText","setTimeout","hidden","columnNumber","indexOf","countClick","contains","sortedList","sort","a","b","dataA","textContent","dataB","Number","salaryToNumber","localeCompare","item","string","salary","slice","split","join","addRow","preventDefault","validation","aditedRow","length","cloneNode","aditedRowTds","count","label","inputValue","firstElementChild","value","trim","toLocaleString","currency","apperCaseValue","toUpperCase","td","editing","emplName","elements","name","position","age","isNaN","targetValue","newInput","newInputValue","focus","ev","key","code"],"mappings":"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","file":"main.9ea74154.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.body.querySelector('table');\nconst tHeaders = Array.from(document.body.querySelector('thead')\n  .rows[0]\n  .children\n);\nconst tBody = document.body.querySelector('tbody');\nlet tBodyRows = Array.from(tBody.children);\nlet activeRow;\nlet prevTarget;\n\ntHeaders.forEach((header) => header.addEventListener('click', toSort));\n\ntBodyRows.forEach((row) => {\n  row.addEventListener('click', select);\n});\n\nconst form = document.createElement('form');\n\nform.method = 'GET';\nform.action = '/';\nform.classList.add('new-employee-form');\ntable.after(form);\n\nform.insertAdjacentHTML(\n  'afterbegin',\n  `\n  <label>Name:\n    <input name=\"name\" type=\"text\" data-qa=\"name\">\n  </label>\n  <label>Position:\n    <input name=\"position\" type=\"text\" data-qa=\"position\">\n  </label>\n  <label>Office:\n    <select name=\"office\" data-qa=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>Age:\n    <input name=\"age\" type=\"number\" data-qa=\"age\">\n  </label>\n  <label>Salary:\n    <input name=\"salary\" type=\"number\" data-qa=\"salary\">\n  </label>\n  <button name=\"saveToTable\" type=\"submit\" value=\"saveToTable\">\n    Save to table\n  </button>\n`\n);\n\nconst labels = Array.from(form.querySelectorAll('label'));\nlet bodyTds = Array.from(tBody.querySelectorAll('td'));\n\nform.addEventListener('submit', addRow);\n\nbodyTds.forEach((td) => {\n  td.addEventListener('dblclick', editing);\n});\n\nfunction select(e) {\n  const target = e.target.closest('tr');\n\n  if (target !== activeRow) {\n    target.classList.add('active');\n\n    if (activeRow) {\n      activeRow.classList.remove('active');\n    }\n  }\n  activeRow = target;\n}\n\nfunction pushNotification(title, description, type) {\n  const element = document.createElement('div');\n  const messageTitle = document.createElement('h2');\n  const messageDescription = document.createElement('p');\n\n  element.className = `notification ${type}`;\n  element.dataset.qa = 'notification';\n  document.body.append(element);\n  element.style.top = 10 + 'px';\n  element.style.right = 10 + 'px';\n\n  messageTitle.className = 'title';\n  messageTitle.innerText = title;\n  element.append(messageTitle);\n\n  messageDescription.innerText = description;\n  element.append(messageDescription);\n\n  setTimeout(() => {\n    element.hidden = true;\n  }, 4000);\n};\n\nfunction toSort(e) {\n  const target = e.target;\n  const columnNumber = tHeaders.indexOf(target);\n\n  if (prevTarget !== target) {\n    target.countClick = 0;\n  }\n\n  if (!target.countClick) {\n    target.countClick = 1;\n  } else {\n    target.countClick = 2;\n  }\n\n  if (!table.contains(target)) {\n    return;\n  }\n\n  const sortedList = tBodyRows.sort((a, b) => {\n    const dataA = a.children[columnNumber].textContent;\n    const dataB = b.children[columnNumber].textContent;\n\n    switch (columnNumber) {\n      case 3:\n        if (target.countClick === 2) {\n          return Number(dataB) - Number(dataA);\n        }\n\n        return Number(dataA) - Number(dataB);\n\n      case 4:\n        if (target.countClick === 2) {\n          return salaryToNumber(dataB) - salaryToNumber(dataA);\n        }\n\n        return salaryToNumber(dataA) - salaryToNumber(dataB);\n\n      default:\n        if (target.countClick === 2) {\n          return dataB.localeCompare(dataA);\n        }\n\n        return dataA.localeCompare(dataB);\n    }\n  });\n\n  if (target.countClick === 2) {\n    target.countClick = 0;\n  }\n\n  sortedList.forEach((item) => tBody.append(item));\n\n  prevTarget = target;\n}\n\nfunction salaryToNumber(string) {\n  const salary = string.slice(1).split(',').join('');\n\n  return Number(salary);\n}\n\nfunction addRow(e) {\n  e.preventDefault();\n\n  if (!validation()) {\n    return;\n  };\n\n  const aditedRow = tBodyRows[tBodyRows.length - 1].cloneNode(true);\n  const aditedRowTds = Array.from(aditedRow.children);\n  let count = 0;\n\n  tBody.append(aditedRow);\n\n  labels.forEach((label) => {\n    const inputValue = label.firstElementChild.value.trim();\n\n    switch (true) {\n      case count === 3:\n        aditedRowTds[count].textContent = inputValue;\n        break;\n\n      case count === 4:\n        aditedRowTds[count].textContent = Number(inputValue).toLocaleString(\n          'es-US',\n          {\n            style: 'currency',\n            currency: 'USD',\n          }\n        ).split('.')[0];\n        break;\n\n      default:\n        const apperCaseValue\n          = inputValue.slice(0, 1).toUpperCase() + inputValue.slice(1);\n\n        aditedRowTds[count].textContent = apperCaseValue;\n    }\n\n    count++;\n  });\n\n  pushNotification(\n    'Success',\n    'Employee has been added to the table',\n    'success'\n  );\n\n  tBodyRows = Array.from(tBody.children);\n  bodyTds = Array.from(tBody.querySelectorAll('td'));\n  aditedRow.addEventListener('click', select);\n  aditedRowTds.forEach((td) => td.addEventListener('dblclick', editing));\n}\n\nfunction validation(e) {\n  const emplName = form.elements.name.value;\n  const position = form.elements.position.value;\n  const age = form.elements.age.value;\n  const salary = form.elements.salary.value;\n\n  if (emplName.length < 4) {\n    pushNotification(\n      'Error',\n      'Oops, short name\\n ' + 'Please enter valid data',\n      'error'\n    );\n\n    return false;\n  }\n\n  if (!isNaN(Number(emplName))) {\n    pushNotification(\n      'Error',\n      'Oops, wrong name\\n ' + 'Please enter valid data',\n      'error'\n    );\n\n    return false;\n  }\n\n  if (position.length < 2) {\n    pushNotification(\n      'Error',\n      'Oops, short position name\\n ' + 'Please enter valid data',\n      'error'\n    );\n\n    return false;\n  }\n\n  if (!isNaN(Number(position))) {\n    pushNotification(\n      'Error',\n      'Oops, wrong position name\\n ' + 'Please enter valid data',\n      'error'\n    );\n\n    return false;\n  }\n\n  if (age < 18 || age > 90) {\n    pushNotification(\n      'Error',\n      \"Oops, something wasn't right with age\\n \"\n      + 'Please enter the valid data',\n      'error'\n    );\n\n    return false;\n  }\n\n  if (!salary) {\n    pushNotification(\n      'Error',\n      \"Oops, something wasn't right\\n \" + 'Please enter the salary',\n      'error'\n    );\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction editing(e) {\n  const target = e.target;\n  const targetValue = target.textContent;\n\n  target.textContent = '';\n\n  const newInput = document.createElement('input');\n  let newInputValue;\n\n  if (Number(targetValue) || salaryToNumber(targetValue)) {\n    newInput.type = 'number';\n  } else {\n    newInput.type = 'text';\n  }\n\n  newInput.classList.add('cell-input');\n  target.append(newInput);\n  newInput.focus();\n\n  newInput.addEventListener('keydown', (ev) => {\n    if (newInput.type === 'text' && ev.key >= 0 && ev.key <= 9) {\n      ev.preventDefault();\n    }\n  });\n\n  newInput.addEventListener('blur', () => {\n    if (newInput.value) {\n      switch (true) {\n        case !Number(targetValue)\n          && newInput.type === 'number':\n          newInputValue = Number(newInput.value)\n            .toLocaleString('es-US', {\n              style: 'currency',\n              currency: 'USD',\n            })\n            .split('.')[0];\n          break;\n\n        case newInput.type === 'text':\n          newInputValue\n            = newInput.value[0].toUpperCase() + newInput.value.slice(1);\n          break;\n\n        default:\n          newInputValue = newInput.value;\n      }\n    }\n\n    target.textContent = (newInput.value === '') ? targetValue : newInputValue;\n\n    newInput.remove();\n  });\n\n  newInput.addEventListener('keydown', (ev) => {\n    if (ev.code === 'Enter') {\n      if (newInput.value) {\n        switch (true) {\n          case !Number(targetValue) && newInput.type === 'number':\n            newInputValue = Number(newInput.value)\n              .toLocaleString('es-US', {\n                style: 'currency',\n                currency: 'USD',\n              })\n              .split('.')[0];\n            break;\n\n          case newInput.type === 'text':\n            newInputValue\n              = newInput.value[0].toUpperCase() + newInput.value.slice(1);\n            break;\n\n          default:\n            newInputValue = newInput.value;\n        }\n      }\n\n      target.textContent = newInput.value === '' ? targetValue : newInputValue;\n\n      newInput.remove();\n    };\n  });\n}\n"]}